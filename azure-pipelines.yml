variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

resources:
  containers:
    - container: graphdb
      endpoint: dockerHub
      image: nickrobison/graphdb:8.2.0-free
      ports:
        - 7200:7200
    - container: chrome
      image: selenium/standalone-chrome:3.141.59-zirconium
      ports:
        - 4444
        - 4444
      volumes:
        - /dev/shm:/dev/shm

stages:
  - stage: Compile
    displayName: Compile Code
    pool:
      vmImage: 'ubuntu-16.04'
    jobs:
      - job: Compile_Default
        displayName: Normal Compile
        strategy:
          matrix:
#            java8:
#              jvm: 1.8
            java11:
              jvm: 1.11
        steps:
          - checkout: self
            submodules: true
          - script: |
              sudo apt-get install libpng16-16
          - task: Cache@2
            inputs:
              key: 'maven | "$(Agent.OS)" | **/pom.xml'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: $(jvm)
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              goals: 'compile'
          - task: PublishBuildArtifacts@1
  #      - job: Compile_Checker
  #        continueOnError: true
  #        steps:
  #          - checkout: self
  #            submodules: true
  #          - task: Cache@2
  #            inputs:
  #              key: 'maven | "$(Agent.OS)" | **/pom.xml'
  #              restoreKeys: |
  #                maven | "$(Agent.OS)"
  #                maven
  #              path: $(MAVEN_CACHE_FOLDER)
  #            displayName: Cache Maven local repo
  #          - task: Maven@3
  #            inputs:
  #              mavenPomFile: 'pom.xml'
  #              mavenOptions: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  #              javaHomeOption: 'JDKVersion'
  #              jdkVersionOption: '1.11'
  #              jdkArchitectureOption: 'x64'
  #              publishJUnitResults: true
  #              testResultsFiles: '**/TEST-*.xml'
  #              goals: 'compile -Pchecker'
  - stage: Test
    displayName: Test Code
    pool:
      vmImage: 'ubuntu-16.04'
    jobs:
      - job: Tests_Unit
        strategy:
          matrix:
#            java8:
#              jvm: 1.8
            java11:
              jvm: 1.11
        displayName: Unit Tests
        services:
          graphdb: graphdb
        steps:
          - checkout: self
            submodules: true
          - task: Cache@2
            inputs:
              key: 'maven | "$(Agent.OS)" | **/pom.xml'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER) -Dmaven.javadoc.skip=true -DskipDocker' # Temporarily disable javadoc building because we're hitting an NPE. Also, skip docker until we can migrate to jib
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: $(jvm)
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              goals: 'test'
      - job: Tests_Integration
        strategy:
          matrix:
#            java8:
#              jvm: 1.8
            java11:
              jvm: 1.11
        displayName: Integration Tests
        services:
          graphdb: graphdb
        steps:
          - checkout: self
            submodules: true
          - script: |
              sudo apt-get install libpng16-16
            displayName: Install system dependencies
          - task: Docker@2
            displayName: Login for Private Docker Images
            inputs:
              command: login
              containerRegistry: dockerHub
          - task: Cache@2
            inputs:
              key: 'maven | "$(Agent.OS)" | **/pom.xml'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo
          - task: Cache@2
            inputs:
              key: 'yarn | "$(Agent.OS)" | trestle-server/yarn.lock'
              restoreKeys: |
                yarn | "$(Agent.OS)"
                yarn
              path: $(YARN_CACHE_FOLDER)
            displayName: Cache Yarn packages
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER) -Dmaven.javadoc.skip=true -DskipDocker -DskipTests' # Temporarily disable javadoc building because we're hitting an NPE. Also, skip docker until we can migrate to jib
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: $(jvm)
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              goals: 'package -Pintegration-tests -pl trestle-server -am'






